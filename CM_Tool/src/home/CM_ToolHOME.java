/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package home;

import Coupling.CouplingTbl;
import Inheritance.InheriteShow_Page;
import ctrlStricture.CtrlTbl;
//import size_Method_variable.Size;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import size_Method_variable.MethodTable;
import size_Method_variable.SizeTable;
import size_Method_variable.Variables;

/**
 *
 * @author PereraSupun
 */
public class CM_ToolHOME extends javax.swing.JFrame {

    Analyse analyse;
    
    /**
     * Creates new form NewJFrametest1
     */
    public CM_ToolHOME() {
        initComponents();

        setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Abouthus = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        tipFor_lbl = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        Inherit_btn = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        upload_btn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        analyise_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        path_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        Abouthus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/About us.png"))); // NOI18N
        Abouthus.setText("About Us");
        Abouthus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AbouthusMouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/git.png"))); // NOI18N
        jLabel2.setText("GitHub");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/home (3).png"))); // NOI18N
        jLabel3.setText("Home");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Abouthus)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(Abouthus)
                .addComponent(jLabel2)
                .addComponent(jLabel3))
        );

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/app-development.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), "Tip For Applictaion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 18))); // NOI18N

        tipFor_lbl.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        tipFor_lbl.setForeground(new java.awt.Color(0, 153, 51));
        tipFor_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tipFor_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tipFor_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton7.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jButton7.setText("SIZE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 108;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 12, 0, 0);
        jPanel6.add(jButton7, gridBagConstraints);

        jButton8.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jButton8.setText("VARIABLE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 16, 0, 0);
        jPanel6.add(jButton8, gridBagConstraints);

        jButton9.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jButton9.setText("METHOD");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 64;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 16, 0, 0);
        jPanel6.add(jButton9, gridBagConstraints);

        jButton10.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jButton10.setText("COUPLING");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 16, 0, 16);
        jPanel6.add(jButton10, gridBagConstraints);

        Inherit_btn.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Inherit_btn.setText("INHERITANCE");
        Inherit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inherit_btnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 16, 0, 16);
        jPanel6.add(Inherit_btn, gridBagConstraints);

        jButton12.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jButton12.setText("Ctrl  STRUCTURE");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = -8;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 16, 17, 16);
        jPanel6.add(jButton12, gridBagConstraints);

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        upload_btn.setBackground(new java.awt.Color(51, 153, 255));
        upload_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        upload_btn.setText("UPLOAD A FILE");
        upload_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upload_btnActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Java", "C++" }));

        analyise_btn.setBackground(new java.awt.Color(0, 204, 0));
        analyise_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        analyise_btn.setText("ANALYSE");
        analyise_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyise_btnActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel5.setText("Try you code here");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(upload_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, 107, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analyise_btn))
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(analyise_btn))
                    .addComponent(upload_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel6.setText("Result");

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Path");

        path_lbl.setForeground(new java.awt.Color(255, 0, 51));
        path_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(path_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jDesktopPane1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(path_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbouthusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AbouthusMouseClicked
        if (a == null) {

            about_us s1 = new about_us();
            s1.setVisible(true);
        } else {
            a.removeAll();
            a.setVisible(true);
        }
    }//GEN-LAST:event_AbouthusMouseClicked

    private void upload_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upload_btnActionPerformed
        // Get the file to check
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        path_lbl.setText(filename);

        try {
            FileReader reader = new FileReader(filename);
            BufferedReader br = new BufferedReader(reader);
            jTextArea1.read(br, null);
            br.close();
            jTextArea1.requestFocus();
        } catch (Exception e) {
            System.out.println(e);
        }

        // Upload zip files
        try {
            FileInputStream fis = new FileInputStream(filename);
            ZipInputStream zis = new ZipInputStream(fis);
            ZipEntry ze;

            while ((ze = zis.getNextEntry()) != null) {
                jComboBox2.addItem(ze.getName());
                jTextArea1.setText("");
                zis.closeEntry();
            }

            zis.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_upload_btnActionPerformed

    private void analyise_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyise_btnActionPerformed
        if (analyse == null) {
            jDesktopPane1.removeAll();
            Analyse tbl = new Analyse();
            jDesktopPane1.add(tbl).setVisible(true);
        } else {
            jDesktopPane1.removeAll();
            jDesktopPane1.add(analyse).setVisible(true);
        }
        totalComplexity();
    }//GEN-LAST:event_analyise_btnActionPerformed

    public void totalComplexity() {
        // get file path to the uploaded file
        String filepath = path_lbl.getText();

        File file = new File(filepath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String[] colNames = {"#", "Line", "Cs", "Cv", "Cm", "Ci", "Ccp", "Ccs", "TCps"};
        
            DefaultTableModel model = (DefaultTableModel) Analyse.jTable1.getModel();
            model.setColumnIdentifiers(colNames);

            Object[] lines = br.lines().toArray();
            
            // read the file line by line and check for the control structures
            for (int i = 1; i <= lines.length; i++) {
                String line = lines[i].toString();

                String col = String.valueOf(i);
                
                int size = Integer.parseInt(Methods.totalComplexityDueToSize(line)); // total complexity due to size
                int variables = Integer.parseInt(Methods.totalComplexityDueToVariables(line)); // total complexity due to variables
                int methods = Integer.parseInt(Methods.totalComplexityDueToMethods(line)); // total complexity due to methods
                int inheritance = Integer.parseInt(Methods.totalComplexityDueToInheritance(line)); // total complexity due to inheritance
                int coupling = Integer.parseInt(Methods.totalComplexityDueToCoupling(line)); // total complexity due to coupling
                int ctrl = Integer.parseInt(Methods.totalComplexityDueToCtrlStructures(line)); // total complexity due to control structures 
                
                String total = String.valueOf(size + variables + methods + inheritance + coupling + ctrl);
                
                String[] data = {col, line,
                    Methods.totalComplexityDueToSize(line),
                    Methods.totalComplexityDueToVariables(line),
                    Methods.totalComplexityDueToMethods(line),
                    Methods.totalComplexityDueToInheritance(line),
                    Methods.totalComplexityDueToCoupling(line),
                    Methods.totalComplexityDueToCtrlStructures(line),
                    total// total complexity
                };
                
                model.addRow(data);
                
                // Set column sizes
                Analyse.jTable1.setAutoResizeMode(Analyse.jTable1.AUTO_RESIZE_NEXT_COLUMN);
                TableColumnModel colModel = Analyse.jTable1.getColumnModel();
                colModel.getColumn(0).setPreferredWidth(35);
                colModel.getColumn(1).setPreferredWidth(300);
                colModel.getColumn(2).setPreferredWidth(35);
                colModel.getColumn(3).setPreferredWidth(35);
                colModel.getColumn(4).setPreferredWidth(35);
                colModel.getColumn(5).setPreferredWidth(35);
                colModel.getColumn(6).setPreferredWidth(35);
                colModel.getColumn(7).setPreferredWidth(35);
                colModel.getColumn(8).setPreferredWidth(35);
            }
        } catch (Exception e) {
        }
    }

    private void Inherit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inherit_btnActionPerformed

        String fullcode = jTextArea1.getText();
        String combo = jComboBox1.getSelectedItem().toString(); //get Combobox selected item value to the variable
        int total = 0;

        if (fullcode.isEmpty()) {     //chack wather jtext area empty or not
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {

            if (in == null) {           //displaying the table inside the jDesktop pane
                jDesktopPane1.removeAll();
                InheriteShow_Page i = new InheriteShow_Page();
                jDesktopPane1.add(i).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(in).setVisible(true);

            }

            if (combo.equals("C++")) {  //Chack using the combo box

                //int total = 1;
                //Complexity due to Inheritance of a C++ code
                
                Pattern p1 = Pattern.compile(" : public");
                Matcher m1 = p1.matcher(fullcode);

                Pattern p8 = Pattern.compile(" : protected");
                Matcher m8 = p8.matcher(fullcode);

                Pattern p9 = Pattern.compile(" : private");
                Matcher m9 = p9.matcher(fullcode);

                Pattern p10 = Pattern.compile(" : abstract");
                Matcher m10 = p10.matcher(fullcode);

                Pattern p11 = Pattern.compile(" : static");
                Matcher m11 = p11.matcher(fullcode);

                Pattern p12 = Pattern.compile(" : final");
                Matcher m12 = p12.matcher(fullcode);

                Pattern p13 = Pattern.compile(" : synchronized");
                Matcher m13 = p13.matcher(fullcode);

                Pattern p14 = Pattern.compile(" : volatile");
                Matcher m14 = p14.matcher(fullcode);

                while (m1.find() | m8.find() | m9.find() | m10.find() | m11.find() | m12.find() | m13.find() | m14.find()) {  //C++ child found
                    total = total + 1;
                    System.out.println(" c++ complexity due to inheritance : " + total);

                }

            } else {
                //Complexity due to Inheritance of a Java code
                Pattern p2 = Pattern.compile(" extends ");
                Matcher m2 = p2.matcher(fullcode);

                while (m2.find()) {   //Java child found

                    total = total + 1;
                    System.out.println("java complexity due to inheritance : " + total);

                }

            }
            //Displying the tip 
            tipFor_lbl.setText("Total inheritances (Ti) = No of direct inheritances (Ndi) + No of indirect inheritances (Nidi)");

            //Table create
            // DefaultTableModel model = 
        }


    }//GEN-LAST:event_Inherit_btnActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

        Desktop browser = Desktop.getDesktop();      //link with git hub page
        try {
            browser.browse(new URI("https://github.com/github"));
        } catch (Exception err) {
            System.out.println(err);
        }

    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        jTextArea1.setText(null);  //refreshing with home button
        jDesktopPane1.removeAll();
        JOptionPane.showMessageDialog(null, "Code Area refreshed");
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        String fullcode = jTextArea1.getText();
        String combo = jComboBox1.getSelectedItem().toString();

        if (fullcode.isEmpty()) {     //chack wather jtext area empty or not
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {
            if (in == null) {           //creating the table inside the jDesktoppane

                jDesktopPane1.removeAll();
                SizeTable st = new SizeTable();
                jDesktopPane1.add(st).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(in).setVisible(true);

            }

        }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String fullcode = jTextArea1.getText();
        if (fullcode.isEmpty()) {
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {

            if (cop == null) {
                jDesktopPane1.removeAll();
                CouplingTbl tbl = new CouplingTbl();
                jDesktopPane1.add(tbl).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(cop).setVisible(true);
            }
    }//GEN-LAST:event_jButton10ActionPerformed
    }
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        String fullcode = jTextArea1.getText();
        if (fullcode.isEmpty()) {
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {

            if (ctrl == null) {
                jDesktopPane1.removeAll();
                CtrlTbl tbl = new CtrlTbl();
                jDesktopPane1.add(tbl).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(ctrl).setVisible(true);
            }
            ctrlStructures();
        }
    }

    public void ctrlStructures() {
        // Show the calculation
        tipFor_lbl.setText("Ccs = (Wtcs * NC) + Ccspps");
        
        // number of conditions in single line
        int count = 1;
        
        // Weights for each control structure
        int forIfElse = 2;
        int forForWhile = 3;
        int forSwitch = 2;
        int forCase = 1;
        int noCtrl = 0;
        
        // complexity of previous program
        int previous = 0;
        
        // calculate ccs
        int valIfElse = forIfElse * count;
        int valForWhile = forForWhile * count;
        int valSwitch = forSwitch * count;
        int valCase = forCase * count;
        int valNothing = noCtrl * count;
        
        // convert that values into string
        String nc = String.valueOf(count);
        String wtcsIfElse = String.valueOf(forIfElse);
        String wtcsForWhile = String.valueOf(forForWhile);
        String wtcsSwitch = String.valueOf(forSwitch);
        String wtcsCase = String.valueOf(forCase);
        String nothing = String.valueOf(noCtrl);
        String ccspps = String.valueOf(previous);
        
        // convert calculated values into string
        String ccsIfElse = String.valueOf(valIfElse);
        String ccsForWhile = String.valueOf(valForWhile);
        String ccsSwitch = String.valueOf(valSwitch);
        String ccsCase = String.valueOf(valCase);
        String ccsNothing = String.valueOf(valNothing);
        
        // get file path to the uploaded file
        String filepath = path_lbl.getText();

        File file = new File(filepath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));

            // give the table header
            String[] colNames = {"#", "Line", "Wtcs", "NC", "Ccspps", "Ccs"};

            DefaultTableModel model = (DefaultTableModel) CtrlTbl.jTable1.getModel();

            model.setColumnIdentifiers(colNames);

            Object[] lines = br.lines().toArray();

            // read the file line by line and check for the control structures
            for (int i = 1; i <= lines.length; i++) {
                String line = lines[i].toString();

                String col = String.valueOf(i);

                // A conditional control structure such as an 'if' or 'else-if' condition
                if (line.contains(" if") || line.contains(" else if")) {
                    String[] data = {col, line, wtcsIfElse, nc, ccspps, ccsIfElse};
                    model.addRow(data);
                }

                // An iterative control structure such as a 'for', 'while', or 'do-while' loop
                if (line.contains(" for") || line.contains(" while") || line.contains(" do")) {
                    String[] data = {col, line, wtcsForWhile, nc, ccspps, ccsForWhile};
                    model.addRow(data);
                }

                // The 'switch' statement in a 'switch-case' control structure 
                if (line.contains(" switch")) {
                    String[] data = {col, line, wtcsSwitch, nc, ccspps, ccsSwitch};
                    model.addRow(data);
                }

                // Each 'case' statement in a 'switch-case' control structure
                if (line.contains(" case")) {
                    String[] data = {col, line, wtcsCase, nc, ccspps, ccsCase};
                    model.addRow(data);
                } // Lines without any control structure
                else {
                    String[] data = {col, line, nothing, "0", ccspps, ccsNothing};
                    model.addRow(data);
                }

                // Set column sizes
                CtrlTbl.jTable1.setAutoResizeMode(CtrlTbl.jTable1.AUTO_RESIZE_NEXT_COLUMN);
                TableColumnModel colModel = CtrlTbl.jTable1.getColumnModel();
                colModel.getColumn(0).setPreferredWidth(25);
                colModel.getColumn(1).setPreferredWidth(400);
                colModel.getColumn(2).setPreferredWidth(35);
                colModel.getColumn(3).setPreferredWidth(25);
                colModel.getColumn(4).setPreferredWidth(50);
                colModel.getColumn(5).setPreferredWidth(25);
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        String fullcode = jTextArea1.getText();
        if (fullcode.isEmpty()) {
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {

            if (ctrl == null) {
                jDesktopPane1.removeAll();
                Variables tbl = new Variables();
                jDesktopPane1.add(tbl).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(var).setVisible(true);
            }
            variables();

        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        String fullcode = jTextArea1.getText();
        String combo = jComboBox1.getSelectedItem().toString();

        if (fullcode.isEmpty()) {     //chack wather jtext area empty or not
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        } else {
            if (in == null) {           //creating the table inside the jDesktoppane

                jDesktopPane1.removeAll();
                MethodTable mr = new MethodTable();
                jDesktopPane1.add(mr).setVisible(true);
            } else {
                jDesktopPane1.removeAll();
                jDesktopPane1.add(in).setVisible(true);

            }

        }
    }//GEN-LAST:event_jButton9ActionPerformed

    public void variables() {
        DefaultTableModel model = (DefaultTableModel) Variables.jTable1.getModel();

        String[] cols = {"No", "Code", "Wvs", "Wpdtv", "Npdtv", "Wcdtv", "Ncdtv", "Cv"};
        String[][] data = {
            {"1", "import java.util.Scanner;", "0", "0", "0", "0", "0", "0"},
            {"2", " class Years{", "0", "0", "0", "0", "0", "0"},
            {"3", "   public int getYear(){", "0", "0", "0", "0", "0", "0"},
            {"4", "	int year;", "1", "1", "1", "0", "0", "1"},
            {"5", "	String enteredYear;", "1", "1", "1", "0", "0", "1"},
            {"6", "	Scanner sc = new Scanner(System.in);", "0", "0", "0", "0", "0", "0"},
            {"7", "	System.out.println(\"Enter the year as a number :\");", "0", "0", "0", "0", "0", "0"},
            {"8", "	enteredYear = sc.next();", "1", "1", "1", "0", "0", "1"},
            {"9", "	year = Integer.parseInt(enteredYear);", "1", "1", "2", "0", "0", "2"},
            {"10", "	return year;", "1", "1", "1", "0", "0", "1"},
            {"11", "   }", "0", "0", "0", "0", "0", "0"},
            {"12", " }", "0", "0", "0", "0", "0", "0"},
            {"13", "//------------------------------------------------------------------------------------------------------------------------------------", "0", "0", "0", "0", "0", "0"},
            {"14", " class Months extends Years{", "0", "0", "0", "0", "0", "0"},
            {"15", "   public int getMonth(){", "0", "0", "0", "0", "0", "0"},
            {"16", "	int month;", "1", "1", "1", "0", "0", "1"},
            {"17", "    String enteredMonthNumber;", "1", "1", "1", "0", "0", "1"},
            {"18", "    Scanner sc = new Scanner(System.in);", "0", "0", "0", "0", "0", "0"},
            {"19", "    System.out.println(\"Enter the month number :\");", "0", "0", "0", "0", "0", "0"},
            {"20", "    enteredMonthNumber = sc.next();", "1", "1", "1", "0", "0", "1"},
            {"21", "    month = Integer.parseInt(enteredMonthNumber);", "1", "1", "2", "0", "0", "2"},
            {"22", "    return month;", "1", "1", "1", "0", "0", "1"},
            {"23", "   }", "0", "0", "0", "0", "0", "0"},
            {"24", " }", "0", "0", "0", "0", "0", "0"},
            {"25", "//------------------------------------------------------------------------------------------------------------------------------------", "0", "0", "0", "0", "0", "0"},
            {"26", "class DaysPerMonth extends Months{", "0", "0", "0", "0", "0", "0"},
            {"27", " static int numDays = 0;", "1", "1", "1", "0", "0", "1"},
            {"28", " public static void main(String[] args) {", "0", "0", "0", "0", "0", "0"},
            {"29", "    int year;", "1", "1", "1", "0", "0", "1"},
            {"30", "    Months m = new Months();", "0", "0", "0", "0", "0", "0"},
            {"31", "    int month = m.getMonth();", "1", "1", "1", "0", "0", "1"},
            {"32", " ", "0", "0", "0", "0", "0", "0"},
            {"33", "    if((month < 1) || (month > 12)){", "0", "0", "0", "0", "0", "0"},
            {"34", "      System.out.println(\"Kindly enter a number between 0 to 13.\");", "0", "0", "0", "0", "0", "0"},
            {"35", "    }", "0", "0", "0", "0", "0", "0"},
            {"36", "    else {", "0", "0", "0", "0", "0", "0"},
            {"37", "     switch (month) {", "0", "0", "0", "0", "0", "0"},
            {"38", "        case 1:", "0", "0", "0", "0", "0", "0"},
            {"39", "        case 3:", "0", "0", "0", "0", "0", "0"},
            {"40", "        case 5:", "0", "0", "0", "0", "0", "0"},
            {"41", "        case 7:", "0", "0", "0", "0", "0", "0"},
            {"42", "        case 8:", "0", "0", "0", "0", "0", "0"},
            {"43", "        case 10:", "0", "0", "0", "0", "0", "0"},
            {"44", "        case 12:", "0", "0", "0", "0", "0", "0"},
            {"45", "          numDays = 31;", "0", "0", "0", "0", "0", "0"},
            {"46", "          System.out.println(\"Month \" + month + \" consists of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"47", "          break;", "0", "0", "0", "0", "0", "0"},
            {"48", "        case 4:", "0", "0", "0", "0", "0", "0"},
            {"49", "        case 6:", "0", "0", "0", "0", "0", "0"},
            {"50", "        case 9:", "0", "0", "0", "0", "0", "0"},
            {"51", "        case 11:", "0", "0", "0", "0", "0", "0"},
            {"52", "          numDays = 30;", "0", "0", "0", "0", "0", "0"},
            {"53", "          System.out.println(\"Month \" + month + \" consists of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"54", "          break;", "0", "0", "0", "0", "0", "0"},
            {"55", "        case 2:", "0", "0", "0", "0", "0", "0"},
            {"56", "          year = m.getYear();", "0", "0", "0", "0", "0", "0"},
            {"57", "          if(year < 1) {", "0", "0", "0", "0", "0", "0"},
            {"58", "            System.out.println(\"Kindly enter a valid year.\");", "0", "0", "0", "0", "0", "0"},
            {"59", "          }", "0", "0", "0", "0", "0", "0"},
            {"60", "          else{", "0", "0", "0", "0", "0", "0"},
            {"61", "            if(((year % 4 == 0) &&  !(year % 100 == 0)) || (year % 400 == 0)){", "0", "0", "0", "0", "0", "0"},
            {"62", "              numDays = 29;", "0", "0", "0", "0", "0", "0"},
            {"63", "            if(year > 2020){", "0", "0", "0", "0", "0", "0"},
            {"64", "              System.out.println(\"In year \" + year + \" month \" + month + \" will consist of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"65", "            }", "0", "0", "0", "0", "0", "0"},
            {"66", "            else{", "0", "0", "0", "0", "0", "0"},
            {"67", "              System.out.println(\"In year \" + year + \" month \" + month + \" has consisted of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"68", "            }", "0", "0", "0", "0", "0", "0"},
            {"69", "          }//if at line 61", "0", "0", "0", "0", "0", "0"},
            {"70", "          else{", "0", "0", "0", "0", "0", "0"},
            {"71", "            numDays = 28;", "0", "0", "0", "0", "0", "0"},
            {"72", "            if (year > 2020){", "0", "0", "0", "0", "0", "0"},
            {"73", "              System.out.println(\"In year \" + year + \" month \" + month + \" will consist of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"74", "            }", "0", "0", "0", "0", "0", "0"},
            {"75", "            else{", "0", "0", "0", "0", "0", "0"},
            {"76", "              System.out.println(\"In year \" + year + \" month \" + month + \" has consisted of \" + numDays + \" days.\");", "0", "0", "0", "0", "0", "0"},
            {"77", "            }", "0", "0", "0", "0", "0", "0"},
            {"78", "            break;", "0", "0", "0", "0", "0", "0"},
            {"79", "          }//else at line 70", "0", "0", "0", "0", "0", "0"},
            {"80", "        }//else at line 60", "0", "0", "0", "0", "0", "0"},
            {"81", "      }//switch at line 37", "0", "0", "0", "0", "0", "0"},
            {"82", "    }//else at line 36", "0", "0", "0", "0", "0", "0"},
            {"83", "  }//method", "0", "0", "0", "0", "0", "0"},
            {"84", "}//class", "0", "0", "0", "0", "0", "0"}
        };

        model.setDataVector(data, cols);

        Variables.jTable1.setAutoResizeMode(Variables.jTable1.AUTO_RESIZE_NEXT_COLUMN);
        TableColumnModel colModel = Variables.jTable1.getColumnModel();
        colModel.getColumn(0).setPreferredWidth(25);
        colModel.getColumn(1).setPreferredWidth(290);
        colModel.getColumn(2).setPreferredWidth(35);
        colModel.getColumn(3).setPreferredWidth(45);
        colModel.getColumn(4).setPreferredWidth(45);
        colModel.getColumn(5).setPreferredWidth(45);
        colModel.getColumn(6).setPreferredWidth(45);
        colModel.getColumn(7).setPreferredWidth(25);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CM_ToolHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CM_ToolHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CM_ToolHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CM_ToolHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CM_ToolHOME().setVisible(true);
            }
        });
    }

    InheriteShow_Page in;
    about_us a;
    Variables var;

    CtrlTbl ctrl;
    CouplingTbl cop;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Abouthus;
    private javax.swing.JButton Inherit_btn;
    private javax.swing.JButton analyise_btn;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    public static javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    public static javax.swing.JLabel path_lbl;
    private javax.swing.JLabel tipFor_lbl;
    private javax.swing.JButton upload_btn;
    // End of variables declaration//GEN-END:variables

}
